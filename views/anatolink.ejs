<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anato Link</title>
    <link rel="stylesheet" href="./geosurf.css">
</head>
<body>
    <nav>
        <ul class="navlist">
            <a class="about" href="/" >home</a>
            <a class="product" href="/#products">projects</a>
            <a class="service" href="/#services">services</a>
            <a class="orders" href="/.order" >enquire</a>
        </ul>
        </nav>

<div class="mainContainer">
    <div class="infomation">
     <div class="head">
        <h1 class="anatolink">AnatoLink</h1>
        <p class="anatolinked">(coming soon)</p>
     </div>

     <div class="content">
        <div class="whatisit">
            <h3>about</h3>
             <p>The project is a collaborative effort with AnatoLink, focusing on the development of a diagnostic tool for physiotherapy and injury assessment. It incorporates an interactive 3D model, which is integrated with OpenAI's predictive text technology. Users interact with the model by indicating areas of pain or discomfort, and provide additional details such as pain severity, injury duration, and a general injury description. This data is processed by GPT algorithms, which then categorize the information into three sections: an overview, symptoms, and possible treatments. Additionally, the website includes an e-commerce section that offers rehabilitation products, with suggestions based on the injury type and location identified by the user.</p>
        </div>
      
        <div class="skills">
            <h3>skills</h3>
             <p>Anatolink's project development involved a variety of technical skills to transition the product from its initial concept to a market-ready stage. The website was built using React, while the 3D model was crafted using a combination of Blender, Unity, and WebGL. For interactive elements, such as click-based interactivity and camera orbiting, C# scripts were utilized. Integration with OpenAI's technology was a key feature, alongside the implementation of parsing techniques for categorizing text into three distinct sections: symptoms, treatments, and an overview. The project also required extensive use of CSS for styling, and the backend was developed with Node.js and Express.</p>
        </div>
     </div>

     <div class="techstack">
        <h3>tech stack</h3>
        <div class="techcards">
            <div class="techcard">Node.js</div>
            <div class="techcard">JavaScript</div>
            <div class="techcard">React</div>
            <div class="techcard">Express</div>
            <div class="techcard">Railway</div>
            <div class="techcard">PostgreSQL</div>
            <div class="techcard">Open Ai</div>
            <div class="techcard">Unity</div>
            <div class="techcard">WebGL</div>
            <div class="techcard">Blender</div>
        </div>
     </div>



    </div>
    <div class="images">
        <div class="imagecontainer"><img src="/physio4.png" alt=""></div>
        <div class="imagecontainer"><img src="/3dmodel.png" alt=""></div>
        <div class="imagecontainer"><img src="/physiovibes2.png" alt=""></div>
        <div class="imagecontainer"><img src="/physioapps.png" alt=""></div>
        <div class="imagecontainer"><img src="/physioapps2.png" alt=""></div>

    </div>
</div>
    
</body>
</html>